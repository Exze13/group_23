{
	"info": {
		"_postman_id": "5086b2ae-590d-4a21-8edb-1ad6889b69f2",
		"name": "Group_23",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01_HW_Postman",
			"item": [
				{
					"name": "1 task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/get_method?name=Roman&age=29",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_method"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "29"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Roman",
									"type": "text"
								},
								{
									"key": "age",
									"value": "29",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_1?name=Roman&age=29&weight=82",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_1"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "29"
								},
								{
									"key": "weight",
									"value": "82"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_2?name=Roman&age=29&salary=10",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_2"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "29"
								},
								{
									"key": "salary",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Roman&age=29&salary=10",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "29"
								},
								{
									"key": "salary",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6 task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Roman&age=29&salary=10",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "29"
								},
								{
									"key": "salary",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7 task",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Roman",
									"type": "text"
								},
								{
									"key": "age",
									"value": "29",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "02_HW_Postman",
			"item": [
				{
					"name": "1 block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "{{url}}first",
							"host": [
								"{{url}}first"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"var requestData = request.data;\r",
									"var req_sal = requestData.salary;\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Json body test\", () => {\r",
									"  pm.expect(responseJson.name).to.eql(\"Roman\");\r",
									"  pm.expect(responseJson.age).to.eql(\"1\");\r",
									"  pm.expect(responseJson.salary).to.eql(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Name=Name request\", () => {\r",
									"    pm.expect(responseJson.name).to.eql(pm.request.body.formdata.get(\"name\"))\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Age=Age request\", () => {\r",
									"    pm.expect(responseJson.age).to.eql(pm.request.body.formdata.get(\"age\"))\r",
									"})\r",
									"\r",
									"\r",
									" pm.test(\"Salary=Salary request\", () => {\r",
									"     pm.expect(+responseJson.salary).to.eql(+requestData.salary)\r",
									" })\r",
									"\r",
									"\r",
									"console.log(responseJson.family);\r",
									"\r",
									"\r",
									"pm.test(\"Salary Test\", function () {\r",
									"    pm.expect(responseJson.family.u_salary_1_5_year).to.eql(req_sal*\"4\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Roman",
									"type": "text"
								},
								{
									"key": "age",
									"value": "1",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}user_info_3",
							"host": [
								"{{url}}user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var resdata = pm.response.json();\r",
									"var reqdata = request.data;\r",
									"\r",
									"var query = {};\r",
									"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"name check\", function ()  {\r",
									"    pm.expect(resdata.name).to.eql(\"Roman\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"age check\", function ()  {\r",
									"    pm.expect(resdata.age).to.eql(\"20\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"salary check\", function ()  {\r",
									"    pm.expect(resdata.salary).to.eql(10);\r",
									"});\r",
									"\r",
									"console.log(resdata.family)\r",
									"\r",
									"\r",
									"pm.test(\"dog_name\", function (){\r",
									"    pm.expect(resdata.family.pets.dog.name).exist;\r",
									"})\r",
									"\r",
									"pm.test(\"dog_Luky\", function (){\r",
									"    pm.expect(resdata.family.pets.dog.name).to.eql(\"Luky\");\r",
									"})\r",
									"\r",
									"pm.test(\"dog_age_4\", function (){\r",
									"    pm.expect(resdata.family.pets.dog.age).to.include+(\"4\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_3?name=Roman&age=20&salary=10",
							"host": [
								"{{url}}object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "20"
								},
								{
									"key": "salary",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4 block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res_Data = pm.response.json();\r",
									"let req_Data = request.data;\r",
									"let resp_name = res_Data.name;\r",
									"let resp_age = res_Data.age;\r",
									"let resp_salary = parseInt(res_Data.salary);\r",
									"\r",
									"var query = {};\r",
									"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Name chek\", function () {\r",
									"    pm.expect(resp_name).to.eql(\"Roman\")\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Age chek\", function () {\r",
									"    pm.expect(resp_age).to.eql(11)\r",
									"});\r",
									"\r",
									"\r",
									"console.log(query.salary);\r",
									"console.log(res_Data.salary[0]);\r",
									"console.log(res_Data.salary[1]);\r",
									"console.log(res_Data.salary[2]);\r",
									"\r",
									"\r",
									"pm.test(\"Salary 1\", function () {\r",
									"    pm.expect(res_Data.salary[0]).to.eql(12)\r",
									"});\r",
									"\r",
									"pm.test(\"Salary 1\", function () {\r",
									"    pm.expect(res_Data.salary[1]).to.eql(\"24\")\r",
									"});\r",
									"\r",
									"pm.test(\"Salary 1\", function () {\r",
									"    pm.expect(res_Data.salary[2]).to.eql(\"36\")\r",
									"});\r",
									"\r",
									"pm.environment.set(\"name\", \"Roman\")\r",
									"pm.environment.set(\"age\", \"11\")\r",
									"pm.environment.set(\"salary\", \"12\")\r",
									"\r",
									"const salary = [12, \"24\", \"36\"]\r",
									"\r",
									"let count = 0\r",
									"\r",
									"function myLoop(salary) {\r",
									"console.log(salary[count])\r",
									"count++\r",
									"check()\r",
									"}\r",
									"\r",
									"function check() {\r",
									"if (count >= salary.length) return\r",
									"myLoop(salary)\r",
									"}\r",
									"\r",
									"myLoop(salary)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}object_info_4?name=Roman&age=11&salary=12",
							"host": [
								"{{url}}object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Roman"
								},
								{
									"key": "age",
									"value": "11"
								},
								{
									"key": "salary",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let res_Data = pm.response.json();\r",
									"let req_Data = request.data;\r",
									"\r",
									"let req_sal = req_Data.salary;\r",
									"\r",
									"var query = {};\r",
									"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"start_qa_salary\", function (){\r",
									"    pm.expect(res_Data).to.have.property('start_qa_salary')\r",
									"});\r",
									"\r",
									"pm.test(\"qa_salary_after_6_months\", function (){\r",
									"    pm.expect(res_Data).to.have.property('qa_salary_after_6_months')\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_12_months\", function (){\r",
									"    pm.expect(res_Data).to.have.property('qa_salary_after_12_months')\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_1.5_year\", function (){\r",
									"    pm.expect(res_Data).to.have.property('qa_salary_after_1.5_year')\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_3.5_years\", function (){\r",
									"    pm.expect(res_Data).to.have.property('qa_salary_after_3.5_years')\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"person\", function (){\r",
									"    pm.expect(res_Data.person).exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"start salary check\", function ()  {\r",
									"    pm.expect(res_Data.start_qa_salary).to.eql(+req_Data.salary);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_6_months\", function ()  {\r",
									"    pm.expect(res_Data.qa_salary_after_6_months).to.eql(req_sal*\"2\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_12_months\", function ()  {\r",
									"    pm.expect(res_Data.qa_salary_after_12_months).to.eql(req_sal*\"2.7\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_1.5_year\", function ()  {\r",
									"    pm.expect(res_Data[\"qa_salary_after_1.5_year\"]).to.eql(req_sal*\"3.3\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"qa_salary_after_3.5_years\", function ()  {\r",
									"    pm.expect(res_Data[\"qa_salary_after_3.5_years\"]).to.eql(req_sal*\"3.8\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"1st element u name\", function ()  {\r",
									"    pm.expect(res_Data.person.u_name[1]).to.eql(+req_Data.salary);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"age = req_age\", function ()  {\r",
									"    pm.expect(res_Data.person.u_age).to.eql(+req_Data.age);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"u_salary_5_years\", function () {\r",
									"    pm.expect(res_Data.person[\"u_salary_5_years\"]).to.eql(req_sal*\"4.2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}user_info_2",
							"host": [
								"{{url}}user_info_2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "First",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?weight=82&age=29&name=Roman",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "weight",
							"value": "82"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "name",
							"value": "Roman"
						}
					]
				}
			},
			"response": []
		}
	]
}